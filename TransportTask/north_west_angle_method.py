def north_west_angle_method(supply, demand):
    """
    Реализация метода угла северо-запада для поиска базисного допустимого решения в транспортной задаче.

    :param supply: Вектор предложения.
    :param demand: Вектор спроса.
    :return: Список с индексами и значениями базисного допустимого решения.
    """
    # Создаем копии векторов предложения и спроса
    supply_copy = supply.copy()
    demand_copy = demand.copy()

    # Инициализируем индексы для обхода матрицы
    i = 0
    j = 0

    # Создаем массив для хранения индексов и значений базисного допустимого решения
    bfs = []

    # Продолжаем выполнение, пока не соберем достаточное количество элементов для базисного решения
    while len(bfs) < len(supply) + len(demand) - 1:
        # Берем остаток предложения и спроса
        supply_remainder = supply_copy[i]
        demand_remainder = demand_copy[j]

        # Находим минимум между остатками
        value = min(supply_remainder, demand_remainder)

        # Вычитаем найденный минимум из предложения и спроса
        supply_copy[i] -= value
        demand_copy[j] -= value

        # Добавляем индексы и значения для базисного допустимого решения
        bfs.append(((i, j), value))

        # Обновляем индексы в зависимости от того, какой остаток был использован
        if supply_copy[i] == 0 and i < len(supply) - 1:
            i += 1  # Перемещаемся вниз по предложению
        elif demand_copy[j] == 0 and j < len(demand) - 1:
            j += 1  # Перемещаемся вправо по спросу

    return bfs
